// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Usuario {
  id    Int     @id @default(autoincrement())
  nome  String?
  email String  @unique
  ponto Ponto[]
}

model Local {
  id                String   @id @default(uuid())
  enderecoFormatado String   @map("endereco_formatado")
  lat               Decimal
  lng               Decimal
  norte             Decimal?
  sul               Decimal?
  leste             Decimal?
  oeste             Decimal?
  ponto             Ponto[]

  @@unique(name: "posicao", [lat, lng])
}

model Ponto {
  id                String   @id @default(cuid())
  lat               Decimal
  lng               Decimal
  nome              String
  slug              String
  pseudonimos       String[] @map("pseudonimo")
  local             Local    @relation(fields: [localId], references: [id])
  localId           String   @map("local_id")
  site              String?
  telefone          String?
  telefoneFormatado String?  @map("telefone_formatado")
  social            Social[]
  publicado         Boolean  @default(false)
  usuario           Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId         Int      @map("usuario_id")
}

model Social {
  id      String     @id @default(uuid())
  nome    SocialNome
  link    String
  ponto   Ponto      @relation(fields: [pontoId], references: [id])
  pontoId String     @map("ponto_id")
}

enum SocialNome {
  WHATSAPP
  INSTAGRAM
  FACEBOOK
  TELEGRAM
  EMAIL
}
